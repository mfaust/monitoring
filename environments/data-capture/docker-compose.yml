---
# project_name: monitoring
#
# data-capture

version: '2.0'

networks:
  mon:
    driver: bridge
    ipam:
      config:
      - subnet: 172.25.0.0/24

services:

  dnsdock:
    restart: always
    image: bodsch/docker-dnsdock:1703-02
    container_name: dnsdock
    hostname: dnsdock
    labels:
      com.dnsdock.image: "dnsdock"
      com.dnsdock.alias: "dnsdock"
      com.dnsdock.ttl: "30"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
#    ports:
#      - 53:53
#      - 8081:80
    # You can use also Environment vars like this:
    # command: "--nameserver='${DNS_1}:53' --nameserver='${DNS_2}:53' --http=:80"
    command: " --nameserver='10.1.2.14:53' --nameserver='10.1.2.63:53' --http=:80"
    networks:
      mon:
        ipv4_address: 172.25.0.5

  beanstalkd:
    restart: always
    image: bodsch/docker-beanstalkd:1702-02
    container_name: beanstalkd
    hostname: beanstalkd
    labels:
      com.dnsdock.image: "beanstalkd"
      com.dnsdock.alias: "beanstalkd"
      com.dnsdock.ttl: "30"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      mon:
        ipv4_address: 172.25.0.6

  jolokia:
    restart: always
    image: bodsch/docker-jolokia:latest
    container_name: jolokia
    hostname: jolokia
    labels:
      com.dnsdock.image: "jolokia"
      com.dnsdock.alias: "jolokia"
      com.dnsdock.ttl: "30"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./share/resolv.conf:/etc/resolv.conf:ro
#    ports:
#      - 8080:8080
#    extra_hosts:
#      # NOTE: local blueprint-box
#      - 'blueprint-box:192.168.252.170'
    networks:
      mon:
        ipv4_address: 172.25.0.11

  memcached:
    restart: always
    image: bodsch/docker-memcached:1702-02
    container_name: memcached
    hostname: memcached
    labels:
      com.dnsdock.image: "memcached"
      com.dnsdock.alias: "memcached"
      com.dnsdock.ttl: "30"
    env_file:
      - env/memcached.env
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      mon:
        ipv4_address: 172.25.0.12

  nginx:
    restart: always
    image: bodsch/docker-nginx:1702-02
    container_name: nginx
    hostname: nginx
    labels:
      com.dnsdock.image: "nginx"
      com.dnsdock.alias: "nginx"
      com.dnsdock.ttl: "30"
    ports:
      - 80:80
    command: "/usr/sbin/nginx"
    depends_on:
      - cm-rest-service
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./share/nginx/var/www:/var/www:ro
      - ./share/nginx/etc/nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./share/nginx/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./share/nginx/etc/nginx/modules.d/00-restrictions.conf:/etc/nginx/modules.d/00-restrictions.conf:ro
      - ./share/nginx/etc/nginx/modules.d/01-proxy-rest-service.conf:/etc/nginx/modules.d/01-proxy-rest-service.conf:ro
    networks:
      mon:
        ipv4_address: 172.25.0.15

  # support a carbon-relay container
  # we have now a second 'carbon-relay-ng' for testing
  carbon-relay:
    restart: always
    image: bodsch/docker-carbon-relay-ng:1702-02
    container_name: carbon-relay
    hostname: carbon-relay
    labels:
      com.dnsdock.image: "carbon-relay"
      com.dnsdock.alias: "carbon-relay"
      com.dnsdock.ttl: "30"
    ports:
      - 2003:2003
    env_file:
      - env/carbon-relay.env
    extra_hosts:
      # NOTE: external service
      #- 'graphite:10.101.2.83'
      - 'graphite:192.168.252.5'
      #- 'graphite:192.168.0.5'
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      mon:
        ipv4_address: 172.25.0.20

  # single service
  # use MQ to process data
  cm-service-discover:
    restart: always
    build: ../../docker-cm-service-discovery
    container_name: cm-service-discover
    hostname: cm-service-discover
    labels:
      com.dnsdock.image: "cm-service-discover"
      com.dnsdock.alias: "cm-service-discover"
      com.dnsdock.ttl: "30"
    env_file:
      - env/cm-service-discover.env
    depends_on:
      - jolokia
      - memcached
      - beanstalkd
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./share/resolv.conf:/etc/resolv.conf:ro
      - ./share/monitoring/etc/cm-service.yaml:/etc/cm-service.yaml
      - ./share/monitoring/etc/cm-application.yaml:/etc/cm-application.yaml
      - ./data/monitoring:/var/cache/monitoring
    links:
      - jolokia:jolokia
      - memcached:memcached
      - beanstalkd:beanstalkd
    networks:
      mon:
        ipv4_address: 172.25.0.30

  # single service
  # use MQ to process data
  cm-data-collector:
    restart: always
    build: ../../docker-cm-data-collector
    container_name: cm-data-collector
    hostname: cm-data-collector
    labels:
      com.dnsdock.image: "cm-data-collector"
      com.dnsdock.alias: "cm-data-collector"
      com.dnsdock.ttl: "30"
    env_file:
      - env/cm-data-collector.env
    depends_on:
      - jolokia
      - memcached
      - beanstalkd
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./share/resolv.conf:/etc/resolv.conf:ro
      - ./share/monitoring/etc/cm-service.yaml:/etc/cm-service.yaml
      - ./share/monitoring/etc/cm-application.yaml:/etc/cm-application.yaml
      - ./data/monitoring:/var/cache/monitoring
    links:
      - jolokia:jolokia
      - memcached:memcached
      - beanstalkd:beanstalkd
    networks:
      mon:
        ipv4_address: 172.25.0.31

  # single service
  # use MQ to process data
  cm-carbon-client:
    restart: always
    build: ../../docker-cm-carbon-client
    container_name: cm-carbon-client
    hostname: cm-carbon-client
    labels:
      com.dnsdock.image: "cm-carbon-client"
      com.dnsdock.alias: "cm-carbon-client"
      com.dnsdock.ttl: "30"
    env_file:
      - env/cm-carbon-client.env
    depends_on:
      - memcached
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./share/resolv.conf:/etc/resolv.conf:ro
      - ./share/monitoring/etc/cm-service.yaml:/etc/cm-service.yaml
      - ./share/monitoring/etc/cm-application.yaml:/etc/cm-application.yaml
      - ./share/monitoring/etc/cm-monitoring.yaml:/etc/cm-monitoring.yaml
      - ./data/monitoring:/var/cache/monitoring
    links:
      - memcached:memcached
      - beanstalkd:beanstalkd
    networks:
      mon:
        ipv4_address: 172.25.0.32

  # single service
  # use MQ to process data
  cm-grafana-client:
    restart: always
    build: ../../docker-cm-grafana-client
    container_name: cm-grafana-client
    hostname: cm-grafana-client
    labels:
      com.dnsdock.image: "cm-grafana-client"
      com.dnsdock.alias: "cm-grafana-client"
      com.dnsdock.ttl: "30"
    env_file:
      - env/cm-grafana-client.env
    depends_on:
      - beanstalkd
      - memcached
    extra_hosts:
      # NOTE: external service
      #- 'nginx-proxy:10.101.2.83'
      - 'nginx-proxy:192.168.252.5'
      #- 'nginx-proxy:192.168.0.5'
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./share/resolv.conf:/etc/resolv.conf:ro
      - ./share/grafana-client/templates:/usr/local/share/templates:ro
      - ./data/monitoring:/var/cache/monitoring
    links:
      - memcached:memcached
      - beanstalkd:beanstalkd
    networks:
      mon:
        ipv4_address: 172.25.0.33

  # single service
  # use MQ to process data
  cm-graphite-client:
    restart: always
    build: ../../docker-cm-graphite-client
    container_name: cm-graphite-client
    hostname: cm-graphite-client
    labels:
      com.dnsdock.image: "cm-graphite-client"
      com.dnsdock.alias: "cm-graphite-client"
      com.dnsdock.ttl: "30"
    env_file:
      - env/cm-graphite-client.env
    depends_on:
      - beanstalkd
    extra_hosts:
      # NOTE: external service
      #- 'nginx-proxy:10.101.2.83'
      - 'nginx-proxy:192.168.252.5'
      #- 'nginx-proxy:192.168.0.5'
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./share/resolv.conf:/etc/resolv.conf:ro
    links:
      - beanstalkd:beanstalkd
    networks:
      mon:
        ipv4_address: 172.25.0.34

  # single service
  # use MQ to process data
  cm-icinga-client:
    restart: always
    build: ../../docker-cm-icinga-client
    container_name: cm-icinga-client
    hostname: cm-icinga-client
    labels:
      com.dnsdock.image: "cm-icinga-client"
      com.dnsdock.alias: "cm-icinga-client"
      com.dnsdock.ttl: "30"
    env_file:
      - env/icinga2.env
      - env/cm-icinga-client.env
    depends_on:
      - beanstalkd
    #extra_hosts:
      # NOTE: external service
      #- 'nginx-proxy:10.101.2.83'
      #- 'nginx-proxy:192.168.252.101'
      #- 'nginx-proxy:192.168.0.5'
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./share/resolv.conf:/etc/resolv.conf:ro
    networks:
      mon:
        ipv4_address: 172.25.0.35


  icinga2-satellite:
    restart: always
    image: bodsch/docker-icinga2:1703-04
    container_name: icinga2-satellite
    hostname: icinga2-satellite
    labels:
      com.dnsdock.image: "icinga2-satellite"
      com.dnsdock.alias: "icinga2-satellite"
      com.dnsdock.ttl: "30"
    env_file:
      - env/icinga2.env
    depends_on:
      - beanstalkd
      - memcached
    ports:
      - 5665:5665
      - 6666:6666
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./share/resolv.conf:/etc/resolv.conf:ro
      - ./data:/srv
      - ./data/icinga2:/var/lib/icinga2/
      - ./data/monitoring:/var/cache/monitoring
      - ./share/icinga2:/usr/local/monitoring
      - ./share/icinga2/etc/cm-icinga2.yaml:/etc/cm-icinga2.yaml
      - ./share/icinga2/usr/lib/monitoring-plugins/tools:/usr/local/share/icinga2
      - ./share/icinga2/usr/lib/monitoring-plugins/icingachecks.rb:/usr/local/lib/icingachecks.rb:rw
      - ./share/icinga2/usr/lib/monitoring-plugins/check_cm_feeder_status.rb:/usr/lib/monitoring-plugins/check_cm_feeder_status:ro
      - ./share/icinga2/usr/lib/monitoring-plugins/check_cm_cache.rb:/usr/lib/monitoring-plugins/check_cm_cache:ro
      - ./share/icinga2/usr/lib/monitoring-plugins/check_cm_memory.rb:/usr/lib/monitoring-plugins/check_cm_memory:ro
      - ./share/icinga2/usr/lib/monitoring-plugins/check_cm_license.rb:/usr/lib/monitoring-plugins/check_cm_license:rw
      - ./share/icinga2/usr/lib/monitoring-plugins/check_cm_capconnection.rb:/usr/lib/monitoring-plugins/check_cm_capconnection:ro
      - ./share/icinga2/usr/lib/monitoring-plugins/check_cm_runlevel.rb:/usr/lib/monitoring-plugins/check_cm_runlevel:ro
      - ./share/icinga2/usr/lib/monitoring-plugins/check_ssl_cert:/usr/lib/monitoring-plugins/check_ssl_cert:ro
      - ./share/icinga2/etc/icinga2/objects:/etc/icinga2/objects
    links:
      - beanstalkd:beanstalkd
      - memcached:memcached
    networks:
      mon:
        ipv4_address: 172.25.0.38


  cm-rest-service:
    restart: always
    build: ../../docker-cm-rest-service
    container_name: cm-rest-service
    hostname: cm-rest-service
    labels:
      com.dnsdock.image: "cm-rest-service"
      com.dnsdock.alias: "cm-rest-service"
      com.dnsdock.ttl: "30"
    env_file:
      - env/cm-rest-service.env
#    depends_on:
#      - jolokia
#      - carbon-relay
#      - memcached
#    extra_hosts:
#      - 'blueprint-box:192.168.252.170'
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./share/resolv.conf:/etc/resolv.conf:ro
      - ./share/monitoring/etc/cm-service.yaml:/etc/cm-service.yaml
      - ./share/monitoring/etc/cm-application.yaml:/etc/cm-application.yaml
      - ./share/monitoring/etc/cm-monitoring.yaml:/etc/cm-monitoring.yaml
      - ./data/monitoring:/var/cache/monitoring
      - ./data:/srv
    links:
      - beanstalkd:beanstalkd
    networks:
      mon:
        ipv4_address: 172.25.0.40


