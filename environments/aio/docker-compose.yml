---
version: '2.0'

volumes:
  database:
  redis:
  carbon:
  icinga:

networks:
  mon:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24

services:

  data:
    build: ../../docker-cm-data
    container_name: 01-data
    volumes:
      - /share:/share

#  dnsdock:
#    restart: always
#    image: bodsch/docker-dnsdock:1705-04
#    container_name: dnsdock
#    hostname: dnsdock
#    labels:
#      com.dnsdock.alias: dnsdock
#      com.dnsdock.ttl: '120'
#    volumes:
#      - /etc/localtime:/etc/localtime:ro
#      - /var/run/docker.sock:/var/run/docker.sock
#    # You can use also Environment vars like this:
#    # command: "--nameserver='${DNS_1}:53' --nameserver='${DNS_2}:53' --http=:80"
#    command: "--nameserver='10.1.2.14:53' --nameserver='10.1.2.63:53' --http=:80 --ttl=120"
#    networks:
#      mon:
#        ipv4_address: 192.168.1.5

  beanstalkd:
    restart: always
    image: bodsch/docker-beanstalkd:1705-04
    container_name: beanstalkd
    hostname: beanstalkd
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      mon:
        ipv4_address: 192.168.1.6

  database:
    restart: always
    image: bodsch/docker-mysql:1705-04
    container_name: database
    hostname: database
    ports:
      - 3306:3306
    extends:
      file: environments.yml
      service: database
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - database:/srv
    networks:
      mon:
        ipv4_address: 192.168.1.7

  jolokia:
    restart: always
    image: bodsch/docker-jolokia:latest
    container_name: jolokia
    hostname: jolokia
    depends_on:
      - data
    volumes:
      - /etc/localtime:/etc/localtime:ro
#      - /share/etc/resolv.conf:/etc/resolv.conf:ro
    networks:
      mon:
        ipv4_address: 192.168.1.8

  memcached:
    restart: always
    image: bodsch/docker-memcached:1705-04
    container_name: memcached
    hostname: memcached
    volumes:
      - /etc/localtime:/etc/localtime:ro
    command: "-l 0.0.0.0 -m 8 -u memcached"
    networks:
      mon:
        ipv4_address: 192.168.1.9

  redis:
    restart: always
    image: bodsch/docker-redis:1705-04
    container_name: redis
    hostname: redis
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - redis:/var/lib/redis
    networks:
      mon:
        ipv4_address: 192.168.1.10

  nginx:
    restart: always
    image: bodsch/docker-nginx:1705-04
    container_name: nginx
    hostname: nginx
    ports:
      - 80:80
    depends_on:
      - data
      - grafana
      - icingaweb2
      - cm-rest-service
      - markdown-service
    links:
      - grafana
      - icingaweb2
      - cm-rest-service
      - markdown-service
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /share/www/entry-page:/var/www/entry-page
      - /share/etc/nginx/sites-enabled/01-default.conf:/etc/nginx/sites-enabled/01-default.conf
      - /share/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /share/etc/nginx/modules.d/00-restrictions.conf:/etc/nginx/modules.d/00-restrictions.conf
      - /share/etc/nginx/modules.d/01-proxy-rest-service.conf:/etc/nginx/modules.d/01-proxy-rest-service.conf:ro
      - /share/etc/nginx/modules.d/01-proxy-grafana.conf:/etc/nginx/modules.d/01-proxy-grafana.conf
      - /share/etc/nginx/modules.d/01-proxy-graphite.conf:/etc/nginx/modules.d/01-proxy-graphite.conf
      - /share/etc/nginx/modules.d/01-proxy-icingaweb2.conf:/etc/nginx/modules.d/01-proxy-icingaweb2.conf
      - /share/etc/nginx/modules.d/01-proxy-dashing.conf:/etc/nginx/modules.d/01-proxy-dashing.conf
      - /share/etc/nginx/modules.d/01-proxy-markdown-service.conf:/etc/nginx/modules.d/01-proxy-markdown-service.conf
    networks:
      mon:
        ipv4_address: 192.168.1.11

  carbon:
    restart: always
    image: bodsch/docker-go-carbon:1705-04
    container_name: carbon
    hostname: carbon
    depends_on:
      - data
    ports:
      - 2003:2003
      - 2003:2003/udp
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - carbon:/srv
    networks:
      mon:
        ipv4_address: 192.168.1.12

  graphite:
    restart: always
    image: bodsch/docker-graphite:1705-04
    container_name: graphite
    hostname: graphite
    extends:
      file: environments.yml
      service: graphite
    depends_on:
      - data
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - carbon:/srv
    networks:
      mon:
        ipv4_address: 192.168.1.13

  grafana:
    restart: always
    image: bodsch/docker-grafana:1705-04
    container_name: grafana
    hostname: grafana
    extends:
      file: environments.yml
      service: grafana
    depends_on:
      - data
      - database
      - memcached
    links:
      - database
      - memcached
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /share/opt/grafana/dashboards:/opt/grafana/dashboards
      - carbon:/srv
    networks:
      mon:
        ipv4_address: 192.168.1.14


  icinga2-master:
    restart: always
    image: bodsch/docker-icinga2:1706-03
    container_name: icinga2-master
    hostname: icinga2-master
    extends:
      file: environments.yml
      service: icinga2-master
    depends_on:
      - data
      - database
      - redis
    links:
      - database
      - redis
    ports:
      - 5665:5665
      - 6666:6666
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /share/etc/cm-icinga2.yaml:/etc/cm-icinga2.yaml
      - /share/etc/icinga2/objects.d:/etc/icinga2/objects.d
      - /share/usr/local/share/icinga2:/usr/local/share/icinga2
      - /share/usr/lib/monitoring-plugins/icingachecks.rb:/usr/local/lib/icingachecks.rb
      - /share/usr/lib/monitoring-plugins/check_cm_feeder_status.rb:/usr/lib/monitoring-plugins/check_cm_feeder_status
      - /share/usr/lib/monitoring-plugins/check_cm_cache.rb:/usr/lib/monitoring-plugins/check_cm_cache
      - /share/usr/lib/monitoring-plugins/check_cm_memory.rb:/usr/lib/monitoring-plugins/check_cm_memory
      - /share/usr/lib/monitoring-plugins/check_cm_license.rb:/usr/lib/monitoring-plugins/check_cm_license
      - /share/usr/lib/monitoring-plugins/check_cm_capconnection.rb:/usr/lib/monitoring-plugins/check_cm_capconnection
      - /share/usr/lib/monitoring-plugins/check_cm_runlevel.rb:/usr/lib/monitoring-plugins/check_cm_runlevel
      - /share/usr/lib/monitoring-plugins/check_cm_sequencenumbers.rb:/usr/lib/monitoring-plugins/check_cm_seqencenumbers
      - /share/usr/lib/monitoring-plugins/check_ssl_cert:/usr/lib/monitoring-plugins/check_ssl_cert
      - icinga:/srv
      - icinga:/var/lib/icinga2
    networks:
      mon:
        ipv4_address: 192.168.1.15

  icingaweb2:
    restart: always
    image: bodsch/docker-icingaweb2:1705-04
    container_name: icingaweb2
    hostname: icingaweb2
    extends:
      file: environments.yml
      service: icingaweb2
    depends_on:
      - data
      - database
      - icinga2-master
    links:
      - database
      - icinga2-master:icinga2
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - icinga:/srv
    networks:
      mon:
        ipv4_address: 192.168.1.16

  markdown-service:
    restart: always
    image: bodsch/docker-markdown-service:latest
    container_name: markdown-service
    hostname: markdown-service
    depends_on:
      - data
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /share/www/markdown-service:/var/www
    networks:
      mon:
        ipv4_address: 192.168.1.17

  dashing:
    restart: always
    image: bodsch/docker-smashing-icinga2:latest
    container_name: dashing
    hostname: dashing
    extends:
      file: environments.yml
      service: dashing
    depends_on:
      - icinga2-master
    ports:
      - 3030:3030
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      mon:
        ipv4_address: 192.168.1.18


  # CoreMedia Glue and Logic

  cm-rest-service:
    restart: always
    build: ../../docker-cm-rest-service
    container_name: 02-cm-rest-service
    hostname: cm-rest-service
    extends:
      file: environments.yml
      service: cm-rest-service
    depends_on:
      - data
      - redis
      - database
    links:
      - redis
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./logs:/var/log
    networks:
      mon:
        ipv4_address: 192.168.1.30

  # single service
  # use MQ to process data
  cm-service-discovery:
    restart: always
    build: ../../docker-cm-service-discovery
    container_name: cm-service-discover
    hostname: cm-service-discover
    extends:
      file: environments.yml
      service: cm-service-discovery
    depends_on:
      - data
      - jolokia
      - beanstalkd
      - redis
      - database
    links:
      - jolokia
      - beanstalkd
      - redis
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./logs:/var/log
      - /share/etc/cm-service.yaml:/etc/cm-service.yaml
      - /share/etc/cm-application.yaml:/etc/cm-application.yaml
    networks:
      mon:
        ipv4_address: 192.168.1.31

  # single service
  # use MQ to process data
  cm-data-collector:
    restart: always
    build: ../../docker-cm-data-collector
    container_name: cm-data-collector
    hostname: cm-data-collector
    extends:
      file: environments.yml
      service: cm-data-collector
    depends_on:
      - data
      - jolokia
      - beanstalkd
      - redis
      - database
    links:
      - jolokia
      - beanstalkd
      - redis
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./logs:/var/log
      - /share/etc/cm-service.yaml:/etc/cm-service.yaml
      - /share/etc/cm-application.yaml:/etc/cm-application.yaml
    networks:
      mon:
        ipv4_address: 192.168.1.32

  # single service
  # use MQ to process data
  cm-carbon-client:
    restart: always
    build: ../../docker-cm-carbon-client
    container_name: cm-carbon-client
    hostname: cm-carbon-client
    extends:
      file: environments.yml
      service: cm-carbon-client
    depends_on:
      - data
      - redis
    links:
      - redis
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./logs:/var/log
    networks:
      mon:
        ipv4_address: 192.168.1.33

  # single service
  # use MQ to process data
  cm-grafana-client:
    restart: always
    build: ../../docker-cm-grafana-client
    container_name: cm-grafana-client
    hostname: cm-grafana-client
    extends:
      file: environments.yml
      service: cm-grafana-client
    depends_on:
      - data
      - beanstalkd
      - redis
      - database
    links:
      - beanstalkd
      - redis
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./logs:/var/log
      - /share/usr/local/share/templates:/usr/local/share/templates
    networks:
      mon:
        ipv4_address: 192.168.1.34

  # single service
  # use MQ to process data
  cm-graphite-client:
    restart: always
    build: ../../docker-cm-graphite-client
    container_name: cm-graphite-client
    hostname: cm-graphite-client
    extends:
      file: environments.yml
      service: cm-graphite-client
    depends_on:
      - data
      - beanstalkd
    links:
      - beanstalkd
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./logs:/var/log
    networks:
      mon:
        ipv4_address: 192.168.1.35

  # single service
  # use MQ to process data
  cm-icinga-client:
    restart: always
    build: ../../docker-cm-icinga-client
    container_name: cm-icinga-client
    hostname: cm-icinga-client
    extends:
      file: environments.yml
      service: cm-icinga-client
    depends_on:
      - data
      - beanstalkd
    links:
      - beanstalkd
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./logs:/var/log
    networks:
      mon:
        ipv4_address: 192.168.1.36
