
/**
  *  HTTP check
  */
apply Service "" for ( app => config in host.vars.coremedia ) {

  import "generic-service"
  vars += config
  display_name = "CoreMedia - Web Proxy (HTTP)"
  notes        = "check against a HTTP Landing Page"
  notes_url    = "/doc/http.html"

  check_command = "http"
  assign where app == "http-proxy"

  max_check_attempts = 3
  check_interval = 45s
  retry_interval = 20s
  enable_notifications = true
}

/**
  *  HTTPS check
  */
apply Service "" for ( app => config in host.vars.coremedia ) {

  import "generic-service"
  vars += config
  display_name = "CoreMedia - Web Proxy (HTTPs)"
  notes        = "check against a HTTPs Landing Page"
  notes_url    = "/doc/http.html"

  check_command = "http"
  assign where app == "https-proxy"

  vars = {
    "http_port" = 443
    "http_ssl" = true
    "http_ssl_force_tlsv1_2_or_higher" = true
  }

  max_check_attempts = 3
  check_interval = 45s
  retry_interval = 20s
  enable_notifications = true
}

/**
  *  generic HTTP check for all vhosts in vars.http_vhost
  */
apply Service "HTTP: " for (http_vhost => config in host.vars.http_vhost) {
  import "generic-service"
  check_command = "http"

  vars = {
    "http_vhost" = http_vhost
  }

  max_check_attempts = 5
  check_interval = 3m
  retry_interval = 2
  enable_notifications = true

  assign where host.vars.http_vhost
}

/**
  *  generic HTTPS check for all vhosts in vars.https_vhost
  */
apply Service "HTTPS: " for (https_vhost => config in host.vars.https_vhost) {
  import "generic-service"
  check_command = "http"

  vars = {
    "http_vhost" = https_vhost
    "http_sni" = true
    "http_ssl" = true
    "notify" = "true"
  }

  max_check_attempts = 5
  check_interval = 3m
  retry_interval = 2
  enable_notifications = true

  assign where host.vars.https_vhost
}
