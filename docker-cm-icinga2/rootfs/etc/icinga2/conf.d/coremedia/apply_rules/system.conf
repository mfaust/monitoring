
/**
  *    Zombie Procs
  */
apply Service "nrpe-zombie-procs" to Host {
  import "generic-service"
  display_name = "NRPE - zombie procs"
  assign where host.vars.nrpe == true
  check_command = "nrpe"
  vars += {
    "nrpe_command" = "check_zombie_procs"
  }
  max_check_attempts = 5
  check_interval = 2m
  retry_interval = 20s
  enable_notifications = false
}

/**
  *    current load
  */
apply Service "nrpe-current-load" to Host {
  import "generic-service"
  display_name = "NRPE - current load"
  assign where host.vars.nrpe == true
  check_command = "nrpe"
  vars += {
    "nrpe_command" = "check_load"
  }
  max_check_attempts = 5
  check_interval = 2m
  retry_interval = 20s
  enable_notifications = false
}

/**
  *    available disk space
  */
apply Service "nrpe-disk" to Host {
  import "generic-service"
  display_name = "NRPE - Disk Space /"
  assign where host.vars.nrpe == true
  check_command = "nrpe"
  vars += {
    "nrpe_command" = "check_disk"
    "nrpe_arguments" = [
      "10%",
      "5%",
      "/",
    ]
  }
  max_check_attempts = 5
  check_interval = 2m
  retry_interval = 20s
  enable_notifications = false
}

apply Service "node-exporter-disk" {

  import "generic-service"
  display_name = "operating system disk"
  notes        = "Operation System Usage of Filesystem"
  notes_url    = "/doc/operation-system.html"

  check_command = "coremedia_ne_disk"
  assign where host.vars.node_exporter

  vars += {
    "host"   = host.address
    "partition" = "/"
    "warning" = 80
    "critical" = 90
    /* "notification" = "aws_sns" */
  }

  max_check_attempts = 3
  check_interval = 2m
  retry_interval = 20s
  enable_notifications = false
}

apply Service "node-exporter-memory" {

  import "generic-service"
  display_name = "operating system memory"
  notes        = "Operation System Usage of Memory and Swap check"
  notes_url    = "/doc/operation-system.html"

  check_command = "coremedia_ne_memory"
  assign where host.vars.node_exporter

  vars += {
    "host"   = host.address
    "warning" = 80
    "critical" = 90
    /* "notification" = "aws_sns" */
  }

  max_check_attempts = 3
  check_interval = 2m
  retry_interval = 20s
  enable_notifications = false
}

apply Service "node-exporter-load" {

  import "generic-service"
  display_name = "operating system load"
  notes        = "Operation System Load usage"
  notes_url    = "/doc/operation-system.html"

  check_command = "coremedia_ne_load"
  assign where host.vars.node_exporter

  vars += {
    "host"   = host.address
    "warning" = 1
    "critical" = 2
    /* "notification" = "aws_sns" */
  }

  max_check_attempts = 3
  check_interval = 2m
  retry_interval = 20s
  enable_notifications = false
}

