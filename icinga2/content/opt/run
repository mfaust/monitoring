#!/bin/bash

set -e

initfile=/etc/icinga2/run.init

HOSTNAME="docker-icinga2"

env | grep BLUEPRINT  > /etc/env.vars
env | grep HOST_     >> /etc/env.vars

chmod 1777 /tmp

# chown directories and files that might be coming from volumes
chown -R mysql:mysql /var/lib/mysql
chown -R nagios:root /etc/icinga2
chown nagios:nagios /etc/icinga2/features-available/ido-mysql.conf
chown -R nagios:nagios /var/lib/icinga2
# chown -R root:root /etc/icinga-web
# chown root:www-data /etc/icinga-web/conf.d/module_reporting.xml /etc/icinga-web/conf.d/auth.xml /etc/icinga-web/conf.d/access.xml /etc/icinga-web/conf.d/database-web.xml /etc/icinga-web/conf.d/databases.xml
chown root:icingaweb2 /etc/icingaweb2
chmod 2770 /etc/icingaweb2
chown -R www-data:icingaweb2 /etc/icingaweb2/*
find /etc/icingaweb2 -type f -name "*.ini" -exec chmod 660 {} \;
find /etc/icingaweb2 -type d -exec chmod 2770 {} \;


if [ ! -f "${initfile}" ]
then
  # Passwords...
  DEBIAN_SYS_MAINT_PASSWORD=${DEBIAN_SYS_MAINT_PASSWORD:-$(pwgen -s 15 1)}
  ICINGA_PASSWORD=${ICINGA_PASSWORD:-$(pwgen -s 15 1)}
  IDO_PASSWORD=${IDO_PASSWORD:-$(pwgen -s 15 1)}
  ICINGA_WEB_PASSWORD=${ICINGA_WEB_PASSWORD:-$(pwgen -s 15 1)}
  ICINGAWEB2_PASSWORD=${ICINGAWEB2_PASSWORD:-$(pwgen -s 15 1)}

  # disable ssh-checks
  sed -i -e "s,^.*\ vars.os\ \=\ .*,  //\ vars.os = \"Linux\",g" /etc/icinga2/conf.d/hosts.conf

  # enable icinga2 features if not already there
  echo " => Enabling icinga2 features."
  icinga2 feature enable ido-mysql command livestatus compatlog

  #icinga2 API cert - regenerate new private key and certificate when running in a new container
  if [ ! -f /etc/icinga2/pki/${HOSTNAME}.key ]
  then
    echo " => Generating new private key and certificate for this container ${HOSTNAME} ..."

    PKI_KEY="/etc/icinga2/pki/${HOSTNAME}.key"
    PKI_CSR="/etc/icinga2/pki/${HOSTNAME}.csr"
    PKI_CRT="/etc/icinga2/pki/${HOSTNAME}.crt"

    icinga2 api setup
    sed -i "s,^.*\ NodeName\ \=\ .*,const\ NodeName\ \=\ \"${HOSTNAME}\",g" /etc/icinga2/constants.conf
    icinga2 pki new-cert --cn ${HOSTNAME} --key ${PKI_KEY} --csr ${PKI_CSR}
    icinga2 pki sign-csr --csr ${PKI_CSR} --cert ${PKI_CRT}
    echo " => Finished cert generation"
  fi

  usermod -a -G nagios www-data >> /dev/null
  chfn -f "nagios at ${HOSTNAME}" nagios

  update_user_password () {
    (
      echo "UPDATE mysql.user SET password=PASSWORD('${2}') WHERE user='${1}';"
      echo "FLUSH PRIVILEGES;"
      echo "quit"
    ) |
    mysql
  }

  echo " => Initializing databases and icinga2 configurations."
  echo " => This may take a few minutes"

  if [ "$(ls -A /var/lib/mysql)" ]
  then
    /etc/init.d/mysql start
  else
    echo " => MySQL datadir is empty ... initializing"
    /usr/bin/mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
    echo " => Starting MySQL ... ignore warning about debian-sys-maint user, it will be granted permissions momentarily"
    /etc/init.d/mysql start
    sleep 5
    (
      echo "GRANT ALL PRIVILEGES ON *.* TO 'debian-sys-maint'@'localhost' IDENTIFIED BY '${DEBIAN_SYS_MAINT_PASSWORD}';"
      echo "quit"
    ) |
    mysql
  fi

  # Set debian-sys-maint password
  update_user_password debian-sys-maint ${DEBIAN_SYS_MAINT_PASSWORD}
  sed -i 's,password\ \=\ .*,password\ \=\ '${DEBIAN_SYS_MAINT_PASSWORD}',g' /etc/mysql/debian.cnf

  ICINGAADMIN_PASSWORD=$(openssl passwd -1 "icinga")

  (
    echo "CREATE DATABASE IF NOT EXISTS icinga;"
    echo "CREATE DATABASE IF NOT EXISTS icinga2idomysql;"
    echo "CREATE DATABASE IF NOT EXISTS icingaweb2;"
    echo "GRANT SELECT, INSERT, UPDATE, DELETE, DROP, CREATE VIEW, INDEX, EXECUTE ON icinga.* TO 'icinga'@'localhost' IDENTIFIED BY '${ICINGA_PASSWORD}';"
    echo "GRANT SELECT, INSERT, UPDATE, DELETE, DROP, CREATE VIEW, INDEX, EXECUTE ON icinga2idomysql.* TO 'icinga2-ido-mysq'@'localhost' IDENTIFIED BY '${IDO_PASSWORD}';"
    echo "GRANT SELECT, INSERT, UPDATE, DELETE, DROP, CREATE VIEW, INDEX, EXECUTE ON icingaweb2.* TO 'icingaweb2'@'localhost' IDENTIFIED BY '${ICINGAWEB2_PASSWORD}';"
  ) | mysql

  mysql -f icinga          < /usr/share/icinga2-ido-mysql/schema/mysql.sql                   >> /opt/icinga2-ido-mysql-schema.log 2>&1
  mysql -f icinga2idomysql < /usr/share/dbconfig-common/data/icinga2-ido-mysql/install/mysql >> /opt/icinga2-ido-mysql-schema.log 2>&1
  mysql -f icingaweb2      < /usr/share/icingaweb2/etc/schema/mysql.schema.sql               >> /opt/icingaweb2-schema.log 2>&1

  (
    echo "USE icingaweb2;"
    echo "INSERT IGNORE INTO icingaweb_user (name, active, password_hash) VALUES ('icingaadmin', 1, '${ICINGAADMIN_PASSWORD}');"
    echo "quit"
  ) | mysql

  sed -i 's/password \= \".*\"/password \= \"'${IDO_PASSWORD}'\"/g' /etc/icinga2/features-available/ido-mysql.conf
  sed -i 's/user =\ \".*\"/user =\ \"icinga2-ido-mysq\"/g'          /etc/icinga2/features-available/ido-mysql.conf
  sed -i 's/database =\ \".*\"/database =\ \"icinga2idomysql\"/g'   /etc/icinga2/features-available/ido-mysql.conf


  if [[ -L /etc/icingaweb2/enabledModules/monitoring ]]
  then
    echo "Symlink for /etc/icingaweb2/enabledModules/monitoring exists already...skipping"
  else
    ln -s /etc/icingaweb2/modules/monitoring /etc/icingaweb2/enabledModules/monitoring
  fi

  if [[ -L /etc/icingaweb2/enabledModules/doc ]]
  then
    echo "Symlink for /etc/icingaweb2/enabledModules/doc exists already...skipping"
  else
    ln -s /etc/icingaweb2/modules/doc /etc/icingaweb2/enabledModules/doc
  fi

  sed -i 's,icingaweb2_changeme,'${ICINGAWEB2_PASSWORD}',g' /etc/icingaweb2/resources.ini
  sed -i 's,icinga2-ido-mysq_changeme,'${IDO_PASSWORD}',g' /etc/icingaweb2/resources.ini

  mkdir -p /var/log/icingaweb2
  chown www-data:adm /var/log/icingaweb2

  /etc/init.d/mysql stop

  echo -e "\n"
  echo " ==================================================================="
  echo " MySQL user 'root' has no password but only allows local connections"
  echo " MySQL user 'debian-sys-maint' password set to ${DEBIAN_SYS_MAINT_PASSWORD}"
  echo " MySQL user 'icinga' password set to ${ICINGA_PASSWORD}"
  echo " MySQL user 'icinga2-ido-mysq' password set to ${IDO_PASSWORD}"
  echo " MySQL user 'icinga-web' password set to ${ICINGA_WEB_PASSWORD}"
  echo " MySQL user 'icingaweb2' password set to ${ICINGAWEB2_PASSWORD}"
  echo " ==================================================================="
  echo ""

  touch ${initfile}
fi

echo "Starting Supervisor.  You can safely CTRL-C and the container will continue to run with or without the -d (daemon) option"
/usr/bin/supervisord -c /etc/supervisor/conf.d/icinga2.conf >> /dev/null
